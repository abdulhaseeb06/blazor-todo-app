@page "/"
@inject ITodoService _todoService
@inject NavigationManager _nav

<Table>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Task</TableHeaderCell>
            <TableHeaderCell>Status</TableHeaderCell>
            <TableHeaderCell>Actions</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var item in todos)
        {
            <TableRow @key="item">
                <TableRowCell>@item.Title</TableRowCell>
                <TableRowCell>
                    @{
                        if (item.IsCompleted)
                        {
                            <Paragraph>Completed</Paragraph>
                        }
                        else
                        {
                            <Paragraph>Pending</Paragraph>
                        }
                    }
                </TableRowCell>
                <TableRowCell>
                    <Button Type="ButtonType.Button" Color="Color.Primary" @onclick="() => NavigateToUpdatePage(item.Id)">Update</Button>
                    <Button Type="ButtonType.Button" Color="Color.Danger" @onclick="() => DeleteTodo(item.Id)">Delete</Button>
                </TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

@code {
    List<Todo> todos = new List<Todo>();

    protected async override Task OnInitializedAsync()
    {
        todos = await _todoService.GetAll();
    }

    private void NavigateToUpdatePage(int id)
    {
        _nav.NavigateTo($"/update-todo/{id}");
    }

    private void DeleteTodo(int id)
    {
        todos.RemoveAll(x => x.Id == id);
        _todoService.Delete(id);
    }

}